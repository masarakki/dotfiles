(custom-set-variables
 '(inhibit-startup-screen t)
 '(safe-local-variable-values (quote ((encoding . utf-8)))))
(custom-set-faces )

(setq make-backup-files nil)
(setq auto-save-default nil)
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq c-basic-offset 4 indent-tabs-mode nil)

(add-to-list 'load-path "~/.emacs.d")
(add-to-list 'load-path "~/.emacs.d/rhtml-mode")
(add-to-list 'load-path "~/.emacs.d/mmm-mode")
(add-to-list 'load-path "~/.emacs.d/coffee-mode")
(add-to-list 'load-path "~/.emacs.d/haml-mode")
(add-to-list 'load-path "~/.emacs.d/sass-mode")
(add-to-list 'load-path "~/.emacs.d/scala-mode")
(require 'ruby-mode)
(require 'rhtml-mode)
(require 'yaml-mode)
(require 'php-mode)
(require 'coffee-mode)
(require 'haml-mode)
(require 'sass-mode)
(require 'scala-mode-auto)
(autoload 'smarty-mode "smarty-mode" "Smarty Mode" t)
(autoload 'js2-mode "js2-mode" "Javascript Mode" t)
(add-to-list 'auto-mode-alist '("\\.rb$" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.ru$" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.erb$" . rhtml-mode))
(add-to-list 'auto-mode-alist '("\\.builder$" . ruby-mode))
(add-to-list 'auto-mode-alist '("Gemfile$" . ruby-mode))
(add-to-list 'auto-mode-alist '("Rakefile$" . ruby-mode))
(add-to-list 'auto-mode-alist '("Guardfile$" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rake$" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.d?tpl$" . html-mode))
(add-to-list 'auto-mode-alist '("\\.tpl\\.php$" . html-mode))
(add-to-list 'auto-mode-alist '("\\.php$" . php-mode))
(add-to-list 'auto-mode-alist '("\\.yml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.json$" . js2-mode))
(add-to-list 'auto-mode-alist '("\\.js$" . js2-mode))
(add-to-list 'auto-mode-alist '("\\.coffee$" . coffee-mode))
(add-to-list 'auto-mode-alist '("\\.haml$" . haml-mode))
(add-to-list 'auto-mode-alist '("\\.sass$" . sass-mode))
(setq ruby-indent-level 2)
(setq ruby-indent-tabs-mode nil)
(setq ruby-deep-indent-paren '(t))

(setq require-final-newline t)
(add-hook 'before-save-hook 'delete-trailing-whitespace)
(add-hook 'before-save-hook (lambda () (set-buffer-file-coding-system 'unix)))

(setq interprogram-paste-function
      (lambda ()
        (shell-command-to-string "xsel -b -o")))
(setq interprogram-cut-function
      (lambda (text &optional rest)
        (let* ((process-connection-type nil)
               (proc (start-process "xsel" "*Massages*" "xsel" "-b" "-i")))
          (process-send-string proc text)
          (process-send-eof proc))))

(defun make-file-executable ()
  "Make the file of this buffer executable"
  (save-restriction
    (widen)
    (if (string= "#!" (buffer-substring-no-properties 1 (min 3 (point-max))))
        (let ((name (buffer-file-name)))
          (or (equal ?. (string-to-char (file-name-nondirectory name)))
              (let ((mode (file-modes name)))
                (set-file-modes name (logior mode (logand (/ mode 4) 73)))
                (message (concat "Wrote " name " (+x)"))))))))

(add-hook 'after-save-hook 'make-file-executable)
(setq vc-follow-symlinks t)
(setq auto-revert-check-vc-info t)
(menu-bar-mode -1)
